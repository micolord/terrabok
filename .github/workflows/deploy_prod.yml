

name: Deploy prod
permissions:
  security-events: write


on:

  push:
    branches: [ "main" ]

jobs:
  # This workflow contains a single job called "build"
  checkout:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: View Contents
        run: ls -l

      - uses: actions/upload-artifact@master
        with:
          name: checkout-artifact
          path: ./

  terraform_validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: checkout
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2 

      - name: Find and Replace Env
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_env"
          replace: "prod"
          regex: false
          include: "backend.tf"      

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - name: Terraform Validate
        id: validate
        run: terraform validate


  terraform_plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [terraform_validate]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_env"
          replace: "prod"
          regex: false
          include: "backend.tf"    

      - name: Find and Replace Creds
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_random_password"
          replace: ${{ secrets.ALICLOUD_RANDOM_PASSWORD }}
          regex: false
          #include: "backend.tf"    

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=config/prod/terraform.tfvars -out=prod-plan.out
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - uses: actions/upload-artifact@master
        with:
          name: plan-output
          path: prod-plan.out


  #approval:
  #  runs-on: ubuntu-latest
  #  needs: [terraform_plan]
  #  steps:
  #    - name: send approval
  #      uses: varu3/slack-approval@main
  #      env:
  #        SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
  #        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #        SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
  #        SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
  #      timeout-minutes: 10

          
  terraform_apply:
     # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    environment: prod

     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - uses: actions/download-artifact@master
        with:
          name: plan-output
           
      - name: View Contents
        run: ls -l

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_env"
          replace: "prod"
          regex: false
          include: "backend.tf"    

      #- name: Find and Replace Secrets
      #  uses: jacobtomlinson/gha-find-replace@v3
      #  with:
      #    find: "dynamic_random_password"
      #    replace: ${{ secrets.ALICLOUD_RANDOM_PASSWORD }}
      #    regex: false
      #    include: ".github/workflows/deploy_prod.yml"  

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve prod-plan.out
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}
      
